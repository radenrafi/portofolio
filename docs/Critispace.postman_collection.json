{
  "info": {
    "name": "Critispace API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    { "key": "base_url", "value": "http://localhost:8000/api" },
    { "key": "token", "value": "" }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      { "key": "token", "value": "{{token}}", "type": "string" }
    ]
  },
  "item": [
    {
      "name": "Health",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/health",
          "host": ["{{base_url}}"],
          "path": ["health"]
        },
        "description": "Health check endpoint. Returns {\"status\":\"ok\"}. Public (no auth)."
      },
      "response": [
        {
          "name": "200 OK",
          "originalRequest": {
            "method": "GET",
            "url": {"raw": "{{base_url}}/health"}
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [{"key": "Content-Type", "value": "application/json"}],
          "body": "{\n  \"status\": \"ok\"\n}"
        }
      ]
    },
    {
      "name": "Auth",
      "item": [
        {
          "name": "Login",
          "request": {
            "auth": { "type": "noauth" },
            "method": "POST",
            "header": [
              {"key": "Content-Type", "value": "application/json"}
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"superadmin@example.com\",\n  \"password\": \"password\",\n  \"device_name\": \"Postman\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/v1/auth/login",
              "host": ["{{base_url}}"],
              "path": ["v1","auth","login"]
            },
            "description": "Obtain Bearer token. Use a valid user credential. Super admin will receive abilities [super_admin, teacher, student]."
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status is 200', function () { pm.response.to.have.status(200); });",
                  "var json = pm.response.json();",
                  "pm.collectionVariables.set('token', json.token);",
                  "pm.test('Token saved to collection variable', function () { pm.expect(pm.collectionVariables.get('token')).to.be.a('string').and.not.empty; });"
                ]
              }
            }
          ],
          "response": [
            {
              "name": "200 OK",
              "originalRequest": {"method": "POST", "url": {"raw": "{{base_url}}/v1/auth/login"}},
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [{"key": "Content-Type","value": "application/json"}],
              "body": "{\n  \"token_type\": \"Bearer\",\n  \"token\": \"<plain_text_token>\",\n  \"abilities\": [\n    \"super_admin\",\n    \"teacher\",\n    \"student\"\n  ],\n  \"user\": {\n    \"id\": 1,\n    \"name\": \"Super Admin\",\n    \"email\": \"superadmin@example.com\",\n    \"role\": \"super_admin\",\n    \"status\": \"active\",\n    \"created_at\": \"2024-09-26T00:00:00.000000Z\",\n    \"updated_at\": \"2024-09-26T00:00:00.000000Z\"\n  }\n}"
            },
            {
              "name": "403 Inactive",
              "originalRequest": {"method": "POST", "url": {"raw": "{{base_url}}/v1/auth/login"}},
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "body": "{\n  \"message\": \"Account is inactive.\"\n}"
            },
            {
              "name": "422 Invalid Credentials",
              "originalRequest": {"method": "POST", "url": {"raw": "{{base_url}}/v1/auth/login"}},
              "status": "Unprocessable Entity",
              "code": 422,
              "_postman_previewlanguage": "json",
              "body": "{\n  \"message\": \"The given data was invalid.\",\n  \"errors\": {\n    \"email\": [\"These credentials do not match our records.\"]\n  }\n}"
            }
          ]
        },
        {
          "name": "Me",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/v1/auth/me",
              "host": ["{{base_url}}"],
              "path": ["v1","auth","me"]
            },
            "description": "Return the authenticated user. Requires Bearer token."
          }
        },
        {
          "name": "Change Password",
          "request": {
            "method": "PATCH",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"current_password\": \"password\",\n  \"password\": \"newpassword123\",\n  \"password_confirmation\": \"newpassword123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/v1/auth/change-password",
              "host": ["{{base_url}}"],
              "path": ["v1","auth","change-password"]
            },
            "description": "Change current user's password. Invalidates other tokens except current session."
          },
          "response": [
            {
              "name": "200 OK",
              "originalRequest": {"method": "PATCH", "url": {"raw": "{{base_url}}/v1/auth/change-password"}},
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "body": "{\n  \"message\": \"Password updated successfully.\"\n}"
            },
            {
              "name": "422 Validation Error",
              "originalRequest": {"method": "PATCH", "url": {"raw": "{{base_url}}/v1/auth/change-password"}},
              "status": "Unprocessable Entity",
              "code": 422,
              "_postman_previewlanguage": "json",
              "body": "{\n  \"message\": \"The given data was invalid.\",\n  \"errors\": {\n    \"current_password\": [\"The provided password is incorrect.\"]\n  }\n}"
            }
          ]
        },
        {
          "name": "Logout (current)",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/v1/auth/logout",
              "host": ["{{base_url}}"],
              "path": ["v1","auth","logout"]
            },
            "description": "Revoke current access token."
          },
          "response": [
            {
              "name": "200 OK",
              "originalRequest": {"method": "POST", "url": {"raw": "{{base_url}}/v1/auth/logout"}},
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "body": "{\n  \"message\": \"Logged out successfully.\"\n}"
            }
          ]
        },
        {
          "name": "Logout All",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/v1/auth/logout-all",
              "host": ["{{base_url}}"],
              "path": ["v1","auth","logout-all"]
            },
            "description": "Revoke all access tokens for current user."
          },
          "response": [
            {
              "name": "200 OK",
              "originalRequest": {"method": "POST", "url": {"raw": "{{base_url}}/v1/auth/logout-all"}},
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "body": "{\n  \"message\": \"All sessions have been revoked.\"\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Admin (super_admin)",
      "description": "Endpoints restricted to role: super_admin. Ensure you login with a super admin account.",
      "item": [
        {
          "name": "Teachers",
          "item": [
            {
              "name": "List Teachers",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/v1/admin/teachers?per_page=15&status=active&q=ani",
                  "host": ["{{base_url}}"],
                  "path": ["v1","admin","teachers"],
                  "query": [
                    {"key": "per_page", "value": "15", "description": "Max 100"},
                    {"key": "status", "value": "active", "description": "active|inactive"},
                    {"key": "q", "value": "ani", "description": "Search by name/email"}
                  ]
                },
                "description": "Paginated list of teachers. Supports filters: status, q; and per_page (<=100)."
              }
            },
            {
              "name": "Create Teacher",
              "request": {
                "method": "POST",
                "header": [{"key":"Content-Type","value":"application/json"}],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Jane Doe\",\n  \"email\": \"jane.doe@example.com\",\n  \"password\": \"secret123\",\n  \"status\": \"active\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/v1/admin/teachers",
                  "host": ["{{base_url}}"],
                  "path": ["v1","admin","teachers"]
                },
                "description": "Create a teacher. If password omitted, temporary_password is returned in meta."
              }
            },
            {
              "name": "Show Teacher",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/v1/admin/teachers/1",
                  "host": ["{{base_url}}"],
                  "path": ["v1","admin","teachers","1"]
                },
                "description": "Get a teacher by id. 404 if the user is not a teacher."
              }
            },
            {
              "name": "Update Teacher",
              "request": {
                "method": "PUT",
                "header": [{"key":"Content-Type","value":"application/json"}],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Jane D.\",\n  \"email\": \"jane.d@example.com\",\n  \"status\": \"inactive\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/v1/admin/teachers/1",
                  "host": ["{{base_url}}"],
                  "path": ["v1","admin","teachers","1"]
                },
                "description": "Update teacher fields. Email must be unique."
              }
            },
            {
              "name": "Reset Teacher Password",
              "request": {
                "method": "PATCH",
                "header": [{"key":"Content-Type","value":"application/json"}],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"password\": null\n}"
                },
                "url": {
                  "raw": "{{base_url}}/v1/admin/teachers/1/reset-password",
                  "host": ["{{base_url}}"],
                  "path": ["v1","admin","teachers","1","reset-password"]
                },
                "description": "Reset password. If password is null/omitted, a random password is generated and returned in meta."
              }
            },
            {
              "name": "Deactivate Teacher",
              "request": {
                "method": "PATCH",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/v1/admin/teachers/1/deactivate",
                  "host": ["{{base_url}}"],
                  "path": ["v1","admin","teachers","1","deactivate"]
                },
                "description": "Set teacher status to inactive."
              }
            },
            {
              "name": "Activate Teacher",
              "request": {
                "method": "PATCH",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/v1/admin/teachers/1/activate",
                  "host": ["{{base_url}}"],
                  "path": ["v1","admin","teachers","1","activate"]
                },
                "description": "Set teacher status to active."
              }
            }
          ]
        },
        {
          "name": "Students",
          "item": [
            {
              "name": "List Students",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/v1/admin/students?per_page=15&status=active&q=ani",
                  "host": ["{{base_url}}"],
                  "path": ["v1","admin","students"],
                  "query": [
                    {"key": "per_page", "value": "15", "description": "Max 100"},
                    {"key": "status", "value": "active", "description": "active|inactive"},
                    {"key": "q", "value": "ani", "description": "Search by name/email"}
                  ]
                },
                "description": "Paginated list of students."
              }
            },
            {
              "name": "Create Student",
              "request": {
                "method": "POST",
                "header": [{"key":"Content-Type","value":"application/json"}],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"John Student\",\n  \"email\": \"john.student@example.com\",\n  \"password\": \"secret123\",\n  \"status\": \"active\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/v1/admin/students",
                  "host": ["{{base_url}}"],
                  "path": ["v1","admin","students"]
                },
                "description": "Create a student. If password omitted, temporary_password is returned in meta."
              }
            },
            {
              "name": "Show Student",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/v1/admin/students/1",
                  "host": ["{{base_url}}"],
                  "path": ["v1","admin","students","1"]
                },
                "description": "Get a student by id. 404 if the user is not a student."
              }
            },
            {
              "name": "Update Student",
              "request": {
                "method": "PUT",
                "header": [{"key":"Content-Type","value":"application/json"}],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"John S.\",\n  \"email\": \"john.s@example.com\",\n  \"status\": \"inactive\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/v1/admin/students/1",
                  "host": ["{{base_url}}"],
                  "path": ["v1","admin","students","1"]
                },
                "description": "Update student fields. Email must be unique."
              }
            },
            {
              "name": "Reset Student Password",
              "request": {
                "method": "PATCH",
                "header": [{"key":"Content-Type","value":"application/json"}],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"password\": null\n}"
                },
                "url": {
                  "raw": "{{base_url}}/v1/admin/students/1/reset-password",
                  "host": ["{{base_url}}"],
                  "path": ["v1","admin","students","1","reset-password"]
                },
                "description": "Reset password. If password is null/omitted, a random password is generated and returned in meta."
              }
            },
            {
              "name": "Deactivate Student",
              "request": {
                "method": "PATCH",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/v1/admin/students/1/deactivate",
                  "host": ["{{base_url}}"],
                  "path": ["v1","admin","students","1","deactivate"]
                },
                "description": "Set student status to inactive."
              }
            },
            {
              "name": "Activate Student",
              "request": {
                "method": "PATCH",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/v1/admin/students/1/activate",
                  "host": ["{{base_url}}"],
                  "path": ["v1","admin","students","1","activate"]
                },
                "description": "Set student status to active."
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Teacher (role: teacher)",
      "description": "Endpoints for users with role: teacher.",
      "item": [
        {
          "name": "List Students",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/v1/students?per_page=15&status=active&q=ani",
              "host": ["{{base_url}}"],
              "path": ["v1","students"],
              "query": [
                {"key": "per_page", "value": "15"},
                {"key": "status", "value": "active"},
                {"key": "q", "value": "ani"}
              ]
            },
            "description": "Paginated list of students (teacher scope)."
          }
        },
        {
          "name": "Create Student",
          "request": {
            "method": "POST",
            "header": [{"key":"Content-Type","value":"application/json"}],
            "body": {"mode": "raw", "raw": "{\n  \"name\": \"Student A\",\n  \"email\": \"studenta@example.com\",\n  \"password\": \"secret123\",\n  \"status\": \"active\"\n}"},
            "url": {
              "raw": "{{base_url}}/v1/students",
              "host": ["{{base_url}}"],
              "path": ["v1","students"]
            }
          }
        },
        {
          "name": "Show Student",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/v1/students/1",
              "host": ["{{base_url}}"],
              "path": ["v1","students","1"]
            }
          }
        },
        {
          "name": "Update Student",
          "request": {
            "method": "PUT",
            "header": [{"key":"Content-Type","value":"application/json"}],
            "body": {"mode": "raw", "raw": "{\n  \"name\": \"Student A+\"\n}"},
            "url": {
              "raw": "{{base_url}}/v1/students/1",
              "host": ["{{base_url}}"],
              "path": ["v1","students","1"]
            }
          }
        },
        {
          "name": "Reset Student Password",
          "request": {
            "method": "PATCH",
            "header": [{"key":"Content-Type","value":"application/json"}],
            "body": {"mode": "raw", "raw": "{\n  \"password\": null\n}"},
            "url": {
              "raw": "{{base_url}}/v1/students/1/reset-password",
              "host": ["{{base_url}}"],
              "path": ["v1","students","1","reset-password"]
            }
          }
        },
        {
          "name": "Deactivate Student",
          "request": {
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "{{base_url}}/v1/students/1/deactivate",
              "host": ["{{base_url}}"],
              "path": ["v1","students","1","deactivate"]
            }
          }
        },
        {
          "name": "Activate Student",
          "request": {
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "{{base_url}}/v1/students/1/activate",
              "host": ["{{base_url}}"],
              "path": ["v1","students","1","activate"]
            }
          }
        }
      ]
    },
    {
      "name": "Progress",
      "description": "Student progress tracking (student hit, student self-view, and teacher view).",
      "item": [
        {
          "name": "Student: Hit Progress",
          "request": {
            "method": "POST",
            "header": [
              {"key": "Content-Type", "value": "application/json"}
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"feature\": \"problemChallenge\",\n  \"payload\": {\n    \"solved\": 3,\n    \"total\": 10\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/v1/progress/hit",
              "host": ["{{base_url}}"],
              "path": ["v1","progress","hit"]
            },
            "description": "Create-on-first-hit; update on subsequent hits. For problemChallenge, percent is computed from solved/total. Requires student role."
          }
        },
        {
          "name": "Student: My Progress (summary)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/v1/my/progress",
              "host": ["{{base_url}}"],
              "path": ["v1","my","progress"]
            },
            "description": "Summary of all features for current student."
          }
        },
        {
          "name": "Student: My Progress (feature)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/v1/my/progress/problemChallenge",
              "host": ["{{base_url}}"],
              "path": ["v1","my","progress","problemChallenge"]
            },
            "description": "Detail progress for a single feature."
          }
        },
        {
          "name": "Teacher: Student Progress (summary)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/v1/students/1/progress",
              "host": ["{{base_url}}"],
              "path": ["v1","students","1","progress"]
            },
            "description": "Teacher view of a student's progress (requires teacher role)."
          }
        },
        {
          "name": "Teacher: Student Progress (feature)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/v1/students/1/progress/problemChallenge",
              "host": ["{{base_url}}"],
              "path": ["v1","students","1","progress","problemChallenge"]
            },
            "description": "Teacher view of a student's feature progress."
          }
        }
      ]
    }
  ]
}
